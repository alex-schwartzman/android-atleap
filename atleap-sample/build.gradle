buildscript {
    repositories {
        mavenCentral()

    //uncomment these lines if you would like to have access to latest snapshots at OSS Sonatype
    //  maven {
    //        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    //  }

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
        versionCode new Date().time.toString()[0..9].toInteger()
        versionName "0.1." + new Date().format('yyyyMMddHHmmss')
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile project(':atleap-core')
    //comment above line and uncomment below one in order to compile this app independently
    //compile 'com.blandware.android.atleap:core:+@aar'

    compile 'com.android.support:support-v4:19.0.1'
    compile 'com.android.support:gridlayout-v7:19.0.1'
    compile 'com.android.support:appcompat-v7:19.0.1'

    compile 'com.octo.android.robospice:robospice:1.4.11'
    compile 'com.octo.android.robospice:robospice-cache:1.4.11'
    compile 'com.octo.android.robospice:robospice-ormlite:1.4.11'
    compile 'com.octo.android.robospice:robospice-okhttp:1.4.11'
    compile 'com.octo.android.robospice:robospice-retrofit:1.4.11'

    compile 'com.squareup.picasso:picasso:2.1.1'
}

//in order to activate signature please make the following steps:
// 1. add the following line into file ~/.gradle/gradle.properties
//      com.blandware.android.atleap.sample.properties=[path_to_signature_settings]
// 2. create the file [path_to_signature_settings] with the following content
//      store.file=[path_to_store_with_private_key]
//      store.password=[password_to_store]
//      key.alias=[alias_of_private_key]
//      key.password=[password_to_private_key]

if (project.hasProperty("com.blandware.android.atleap.sample.properties")
        && new File(project.property("com.blandware.android.atleap.sample.properties")).exists()) {

    Properties props = new Properties()
    props.load(new FileInputStream(file(project.property("com.blandware.android.atleap.sample"))))

    android {
        signingConfigs {
            release {
                storeFile file(props['store.file'])
                storePassword props['store.password']
                keyAlias props['key.alias']
                keyPassword props['key.password']
            }

            buildTypes {
                release {
                    signingConfig signingConfigs.release
                }
            }
        }
    }
}
